package fr.lagab.portlet.publication.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import fr.lagab.portlet.publication.model.Publication;
import fr.lagab.portlet.publication.model.PublicationModel;
import fr.lagab.portlet.publication.model.PublicationSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Publication service. Represents a row in the &quot;publication&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fr.lagab.portlet.publication.model.PublicationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PublicationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PublicationImpl
 * @see fr.lagab.portlet.publication.model.Publication
 * @see fr.lagab.portlet.publication.model.PublicationModel
 * @generated
 */
@JSON(strict = true)
public class PublicationModelImpl extends BaseModelImpl<Publication>
    implements PublicationModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a publication model instance should use the {@link fr.lagab.portlet.publication.model.Publication} interface instead.
     */
    public static final String TABLE_NAME = "publication";
    public static final Object[][] TABLE_COLUMNS = {
            { "uuid_", Types.VARCHAR },
            { "id_", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "folderId", Types.BIGINT },
            { "title", Types.VARCHAR },
            { "urlTitle", Types.VARCHAR },
            { "description", Types.VARCHAR },
            { "content", Types.VARCHAR },
            { "structureId", Types.BIGINT },
            { "templateId", Types.BIGINT },
            { "status", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table publication (uuid_ VARCHAR(75) null,id_ LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,folderId LONG,title VARCHAR(75) null,urlTitle VARCHAR(75) null,description VARCHAR(75) null,content VARCHAR(75) null,structureId LONG,templateId LONG,status INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table publication";
    public static final String ORDER_BY_JPQL = " ORDER BY publication.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY publication.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fr.lagab.portlet.publication.model.Publication"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fr.lagab.portlet.publication.model.Publication"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.fr.lagab.portlet.publication.model.Publication"),
            true);
    public static long COMPANYID_COLUMN_BITMASK = 1L;
    public static long GROUPID_COLUMN_BITMASK = 2L;
    public static long STRUCTUREID_COLUMN_BITMASK = 4L;
    public static long TEMPLATEID_COLUMN_BITMASK = 8L;
    public static long USERID_COLUMN_BITMASK = 16L;
    public static long UUID_COLUMN_BITMASK = 32L;
    public static long ID_COLUMN_BITMASK = 64L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fr.lagab.portlet.publication.model.Publication"));
    private static ClassLoader _classLoader = Publication.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Publication.class
        };
    private String _uuid;
    private String _originalUuid;
    private long _id;
    private long _groupId;
    private long _originalGroupId;
    private boolean _setOriginalGroupId;
    private long _companyId;
    private long _originalCompanyId;
    private boolean _setOriginalCompanyId;
    private long _userId;
    private String _userUuid;
    private long _originalUserId;
    private boolean _setOriginalUserId;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private long _folderId;
    private String _title;
    private String _urlTitle;
    private String _description;
    private String _content;
    private long _structureId;
    private long _originalStructureId;
    private boolean _setOriginalStructureId;
    private long _templateId;
    private long _originalTemplateId;
    private boolean _setOriginalTemplateId;
    private int _status;
    private long _columnBitmask;
    private Publication _escapedModel;

    public PublicationModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Publication toModel(PublicationSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Publication model = new PublicationImpl();

        model.setUuid(soapModel.getUuid());
        model.setId(soapModel.getId());
        model.setGroupId(soapModel.getGroupId());
        model.setCompanyId(soapModel.getCompanyId());
        model.setUserId(soapModel.getUserId());
        model.setUserName(soapModel.getUserName());
        model.setCreateDate(soapModel.getCreateDate());
        model.setModifiedDate(soapModel.getModifiedDate());
        model.setFolderId(soapModel.getFolderId());
        model.setTitle(soapModel.getTitle());
        model.setUrlTitle(soapModel.getUrlTitle());
        model.setDescription(soapModel.getDescription());
        model.setContent(soapModel.getContent());
        model.setStructureId(soapModel.getStructureId());
        model.setTemplateId(soapModel.getTemplateId());
        model.setStatus(soapModel.getStatus());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Publication> toModels(PublicationSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Publication> models = new ArrayList<Publication>(soapModels.length);

        for (PublicationSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Publication.class;
    }

    @Override
    public String getModelClassName() {
        return Publication.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("uuid", getUuid());
        attributes.put("id", getId());
        attributes.put("groupId", getGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("folderId", getFolderId());
        attributes.put("title", getTitle());
        attributes.put("urlTitle", getUrlTitle());
        attributes.put("description", getDescription());
        attributes.put("content", getContent());
        attributes.put("structureId", getStructureId());
        attributes.put("templateId", getTemplateId());
        attributes.put("status", getStatus());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String uuid = (String) attributes.get("uuid");

        if (uuid != null) {
            setUuid(uuid);
        }

        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Long folderId = (Long) attributes.get("folderId");

        if (folderId != null) {
            setFolderId(folderId);
        }

        String title = (String) attributes.get("title");

        if (title != null) {
            setTitle(title);
        }

        String urlTitle = (String) attributes.get("urlTitle");

        if (urlTitle != null) {
            setUrlTitle(urlTitle);
        }

        String description = (String) attributes.get("description");

        if (description != null) {
            setDescription(description);
        }

        String content = (String) attributes.get("content");

        if (content != null) {
            setContent(content);
        }

        Long structureId = (Long) attributes.get("structureId");

        if (structureId != null) {
            setStructureId(structureId);
        }

        Long templateId = (Long) attributes.get("templateId");

        if (templateId != null) {
            setTemplateId(templateId);
        }

        Integer status = (Integer) attributes.get("status");

        if (status != null) {
            setStatus(status);
        }
    }

    @JSON
    @Override
    public String getUuid() {
        if (_uuid == null) {
            return StringPool.BLANK;
        } else {
            return _uuid;
        }
    }

    @Override
    public void setUuid(String uuid) {
        if (_originalUuid == null) {
            _originalUuid = _uuid;
        }

        _uuid = uuid;
    }

    public String getOriginalUuid() {
        return GetterUtil.getString(_originalUuid);
    }

    @JSON
    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @JSON
    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _columnBitmask |= GROUPID_COLUMN_BITMASK;

        if (!_setOriginalGroupId) {
            _setOriginalGroupId = true;

            _originalGroupId = _groupId;
        }

        _groupId = groupId;
    }

    public long getOriginalGroupId() {
        return _originalGroupId;
    }

    @JSON
    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _columnBitmask |= COMPANYID_COLUMN_BITMASK;

        if (!_setOriginalCompanyId) {
            _setOriginalCompanyId = true;

            _originalCompanyId = _companyId;
        }

        _companyId = companyId;
    }

    public long getOriginalCompanyId() {
        return _originalCompanyId;
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _columnBitmask |= USERID_COLUMN_BITMASK;

        if (!_setOriginalUserId) {
            _setOriginalUserId = true;

            _originalUserId = _userId;
        }

        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    public long getOriginalUserId() {
        return _originalUserId;
    }

    @JSON
    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @JSON
    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @JSON
    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @JSON
    @Override
    public long getFolderId() {
        return _folderId;
    }

    @Override
    public void setFolderId(long folderId) {
        _folderId = folderId;
    }

    @JSON
    @Override
    public String getTitle() {
        if (_title == null) {
            return StringPool.BLANK;
        } else {
            return _title;
        }
    }

    @Override
    public void setTitle(String title) {
        _title = title;
    }

    @JSON
    @Override
    public String getUrlTitle() {
        if (_urlTitle == null) {
            return StringPool.BLANK;
        } else {
            return _urlTitle;
        }
    }

    @Override
    public void setUrlTitle(String urlTitle) {
        _urlTitle = urlTitle;
    }

    @JSON
    @Override
    public String getDescription() {
        if (_description == null) {
            return StringPool.BLANK;
        } else {
            return _description;
        }
    }

    @Override
    public void setDescription(String description) {
        _description = description;
    }

    @JSON
    @Override
    public String getContent() {
        if (_content == null) {
            return StringPool.BLANK;
        } else {
            return _content;
        }
    }

    @Override
    public void setContent(String content) {
        _content = content;
    }

    @JSON
    @Override
    public long getStructureId() {
        return _structureId;
    }

    @Override
    public void setStructureId(long structureId) {
        _columnBitmask |= STRUCTUREID_COLUMN_BITMASK;

        if (!_setOriginalStructureId) {
            _setOriginalStructureId = true;

            _originalStructureId = _structureId;
        }

        _structureId = structureId;
    }

    public long getOriginalStructureId() {
        return _originalStructureId;
    }

    @JSON
    @Override
    public long getTemplateId() {
        return _templateId;
    }

    @Override
    public void setTemplateId(long templateId) {
        _columnBitmask |= TEMPLATEID_COLUMN_BITMASK;

        if (!_setOriginalTemplateId) {
            _setOriginalTemplateId = true;

            _originalTemplateId = _templateId;
        }

        _templateId = templateId;
    }

    public long getOriginalTemplateId() {
        return _originalTemplateId;
    }

    @JSON
    @Override
    public int getStatus() {
        return _status;
    }

    @Override
    public void setStatus(int status) {
        _status = status;
    }

    @Override
    public StagedModelType getStagedModelType() {
        return new StagedModelType(PortalUtil.getClassNameId(
                Publication.class.getName()));
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            Publication.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Publication toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Publication) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        PublicationImpl publicationImpl = new PublicationImpl();

        publicationImpl.setUuid(getUuid());
        publicationImpl.setId(getId());
        publicationImpl.setGroupId(getGroupId());
        publicationImpl.setCompanyId(getCompanyId());
        publicationImpl.setUserId(getUserId());
        publicationImpl.setUserName(getUserName());
        publicationImpl.setCreateDate(getCreateDate());
        publicationImpl.setModifiedDate(getModifiedDate());
        publicationImpl.setFolderId(getFolderId());
        publicationImpl.setTitle(getTitle());
        publicationImpl.setUrlTitle(getUrlTitle());
        publicationImpl.setDescription(getDescription());
        publicationImpl.setContent(getContent());
        publicationImpl.setStructureId(getStructureId());
        publicationImpl.setTemplateId(getTemplateId());
        publicationImpl.setStatus(getStatus());

        publicationImpl.resetOriginalValues();

        return publicationImpl;
    }

    @Override
    public int compareTo(Publication publication) {
        long primaryKey = publication.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Publication)) {
            return false;
        }

        Publication publication = (Publication) obj;

        long primaryKey = publication.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        PublicationModelImpl publicationModelImpl = this;

        publicationModelImpl._originalUuid = publicationModelImpl._uuid;

        publicationModelImpl._originalGroupId = publicationModelImpl._groupId;

        publicationModelImpl._setOriginalGroupId = false;

        publicationModelImpl._originalCompanyId = publicationModelImpl._companyId;

        publicationModelImpl._setOriginalCompanyId = false;

        publicationModelImpl._originalUserId = publicationModelImpl._userId;

        publicationModelImpl._setOriginalUserId = false;

        publicationModelImpl._originalStructureId = publicationModelImpl._structureId;

        publicationModelImpl._setOriginalStructureId = false;

        publicationModelImpl._originalTemplateId = publicationModelImpl._templateId;

        publicationModelImpl._setOriginalTemplateId = false;

        publicationModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Publication> toCacheModel() {
        PublicationCacheModel publicationCacheModel = new PublicationCacheModel();

        publicationCacheModel.uuid = getUuid();

        String uuid = publicationCacheModel.uuid;

        if ((uuid != null) && (uuid.length() == 0)) {
            publicationCacheModel.uuid = null;
        }

        publicationCacheModel.id = getId();

        publicationCacheModel.groupId = getGroupId();

        publicationCacheModel.companyId = getCompanyId();

        publicationCacheModel.userId = getUserId();

        publicationCacheModel.userName = getUserName();

        String userName = publicationCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            publicationCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            publicationCacheModel.createDate = createDate.getTime();
        } else {
            publicationCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            publicationCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            publicationCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        publicationCacheModel.folderId = getFolderId();

        publicationCacheModel.title = getTitle();

        String title = publicationCacheModel.title;

        if ((title != null) && (title.length() == 0)) {
            publicationCacheModel.title = null;
        }

        publicationCacheModel.urlTitle = getUrlTitle();

        String urlTitle = publicationCacheModel.urlTitle;

        if ((urlTitle != null) && (urlTitle.length() == 0)) {
            publicationCacheModel.urlTitle = null;
        }

        publicationCacheModel.description = getDescription();

        String description = publicationCacheModel.description;

        if ((description != null) && (description.length() == 0)) {
            publicationCacheModel.description = null;
        }

        publicationCacheModel.content = getContent();

        String content = publicationCacheModel.content;

        if ((content != null) && (content.length() == 0)) {
            publicationCacheModel.content = null;
        }

        publicationCacheModel.structureId = getStructureId();

        publicationCacheModel.templateId = getTemplateId();

        publicationCacheModel.status = getStatus();

        return publicationCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(33);

        sb.append("{uuid=");
        sb.append(getUuid());
        sb.append(", id=");
        sb.append(getId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", folderId=");
        sb.append(getFolderId());
        sb.append(", title=");
        sb.append(getTitle());
        sb.append(", urlTitle=");
        sb.append(getUrlTitle());
        sb.append(", description=");
        sb.append(getDescription());
        sb.append(", content=");
        sb.append(getContent());
        sb.append(", structureId=");
        sb.append(getStructureId());
        sb.append(", templateId=");
        sb.append(getTemplateId());
        sb.append(", status=");
        sb.append(getStatus());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(52);

        sb.append("<model><model-name>");
        sb.append("fr.lagab.portlet.publication.model.Publication");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>uuid</column-name><column-value><![CDATA[");
        sb.append(getUuid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>folderId</column-name><column-value><![CDATA[");
        sb.append(getFolderId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>title</column-name><column-value><![CDATA[");
        sb.append(getTitle());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>urlTitle</column-name><column-value><![CDATA[");
        sb.append(getUrlTitle());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description</column-name><column-value><![CDATA[");
        sb.append(getDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>content</column-name><column-value><![CDATA[");
        sb.append(getContent());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>structureId</column-name><column-value><![CDATA[");
        sb.append(getStructureId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>templateId</column-name><column-value><![CDATA[");
        sb.append(getTemplateId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status</column-name><column-value><![CDATA[");
        sb.append(getStatus());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
